@page "/Tickets"

@attribute [Authorize]

@inject TicketsBLL ticketsBLL

<EditForm Model="this" OnValidSubmit="@Buscar">
    <div class="card border-primary mb-3" style="max-width: 100rem;">
        <div class="card">

            <div class="card-header">
                <h2 style="Margin:5px; text-shadow: 1px 2px rgba(0, 0, 0, 0.5); text-align: center; color:black">Consulta de Ticket</h2>
            </div>
            <div class="card-body">


                <form class="row row-cols-lg-auto g-3 align-items-center">
                    @* Fecha Desde *@
                    <div class="input-group" style=" margin-right: 10px; width: 15rem;">
                        <span class="input-group-text">Desde</span>
                        <InputDate @bind-Value="FechaDesde" class="form-control col-4" />
                    </div>

                    @* Fecha Hasta*@
                    <div class="input-group" style=" width: 15rem;">
                        <span class="input-group-text">Hasta</span>
                        <InputDate @bind-Value="FechaHasta" class="form-control col-4" />
                    </div>

                    @* Filtro *@
                    <div class="input-group" style=" width: 15rem;">
                        <span class="input-group-text">Filtro</span>
                        <InputSelect class="form-select text-14 col-3" @bind-Value="Filtro">
                            <option value="0" hidden selected>Seleccione</option>
                            <option value="1">ID</option>
                            <option value="2">Monto</option>
                            <option value="3">Fecha</option>
                        </InputSelect>
                    </div>

                    @* TextBox Busqueda *@
                    <div class="input-group" style=" margin-right: 10px; width: 15rem;">                      
                            <span class="input-group-text">Busqueda</span>
                            <InputText class="form-control" @bind-Value="Criterio" />     
                    </div>


                    @* Boton Buscar *@
                    <button type="button" style="z-index:0;" class="btn btn-outline-primary" @onclick="Buscar">
                        <i class="oi oi-magnifying-glass mr-2" />
                    </button>

                </form>
            </div>



            <table class="table table-striped table-hover mt-4" style="cursor: pointer;">

                <thead class="thead">
                    <tr class="table">
                        <th>ID</th>
                        <th>Monto</th>
                        <th> Fecha</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var ticket in tickets)
                    {
                        <tr>
                            <td>@ticket.TicketId</td> 
                            <td>@ticket.Monto</td>
                            <td>@ticket.FechaTicket.ToString("dd/MM/yyyy")</td>
                           
                            <td><a class="btn btn-sm btn-outline-primary oi oi-eye" href="Ticket/@ticket.TicketId">Ver</a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</EditForm>

@code
{
    public string? Filtro { get; set; }
    public string? Criterio { get; set; }
    public DateTime FechaDesde { get; set; } = new DateTime(2022, 1, 1);
    public DateTime FechaHasta { get; set; } = DateTime.Today;
    public List<Tickets> tickets { get; set; } = new List<Tickets>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        tickets = ticketsBLL.GetList(t => true);
    }

    void Buscar()
    {
        tickets = new List<Tickets>();

        if (FechaHasta != null)
            FechaHasta = FechaHasta.AddHours(23).AddMinutes(59).AddSeconds(59);
        if (Criterio != null)
        {
            switch (Filtro)
            {
                case "1": //Id
                    {
                        int ID = Utilities.ToInt(Criterio);
                        if (ID == -1)
                        {
                            tickets = ticketsBLL.GetList(t => t.FechaTicket >= FechaDesde && t.FechaTicket <= FechaHasta);
                        }
                        else
                        {
                            tickets = ticketsBLL.GetList(t => t.TicketId == ID && t.FechaTicket >= FechaDesde && t.FechaTicket <=
                            FechaHasta);
                        }
                        break;
                    }
                case "2": // Monto
                    {
                        decimal Monto = Utilities.ToDecimal(Criterio);
                        if (Monto == -1)
                        {
                            tickets = ticketsBLL.GetList(t => t.FechaTicket >= FechaDesde && t.FechaTicket <= FechaHasta);
                        }
                        else
                        {
                            tickets = ticketsBLL.GetList(t => t.Monto == Monto && t.FechaTicket >= FechaDesde &&
                            t.FechaTicket <= FechaHasta);
                        }
                        break;
                    }

            }
        }
        else
        {
            tickets = ticketsBLL.GetList(t => t.FechaTicket.Month >= DateTime.Today.Month && t.FechaTicket.Year >=
            DateTime.Today.Year);
        }
    }
}
